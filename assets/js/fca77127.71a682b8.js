"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9691],{15680:(e,t,r)=>{r.r(t),r.d(t,{MDXContext:()=>u,MDXProvider:()=>b,mdx:()=>_,useMDXComponents:()=>s,withMDXComponents:()=>c});var a=r(96540);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(){return n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},n.apply(this,arguments)}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,l=function(e,t){if(null==e)return{};var r,a,l={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var u=a.createContext({}),c=function(e){return function(t){var r=s(t.components);return a.createElement(e,n({},t,{components:r}))}},s=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},b=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,l=e.mdxType,n=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(r),b=l,d=c["".concat(o,".").concat(b)]||c[b]||g[b]||n;return r?a.createElement(d,i(i({ref:t},u),{},{components:r})):a.createElement(d,i({ref:t},u))}));function _(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=r.length,o=new Array(n);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:l,o[1]=i;for(var u=2;u<n;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},51593:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>b,frontMatter:()=>n,metadata:()=>i,toc:()=>u});var a=r(58168),l=(r(96540),r(15680));const n={id:"target_label"},o="target_label type",i={unversionedId:"api/build/target_label",id:"api/build/target_label",title:"target_label type",description:"target\\_label.cell",source:"@site/../docs/api/build/target_label.generated.md",sourceDirName:"api/build",slug:"/api/build/target_label",permalink:"/docs/api/build/target_label",draft:!1,tags:[],version:"current",frontMatter:{id:"target_label"},sidebar:"apiSidebar",previous:{title:"providers_label type",permalink:"/docs/api/build/providers_label"},next:{title:"globals",permalink:"/docs/api/bxl/globals"}},p={},u=[{value:"target_label.cell",id:"target_labelcell",level:2},{value:"target_label.name",id:"target_labelname",level:2},{value:"target_label.package",id:"target_labelpackage",level:2},{value:"target_label.path",id:"target_labelpath",level:2},{value:"target_label.with_sub_target",id:"target_labelwith_sub_target",level:2}],c={toc:u},s="wrapper";function b(e){let{components:t,...r}=e;return(0,l.mdx)(s,(0,a.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("h1",{id:"target_label-type"},(0,l.mdx)("inlineCode",{parentName:"h1"},"target_label")," type"),(0,l.mdx)("h2",{id:"target_labelcell"},"target","_","label.cell"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},"target_label.cell: str\n")),(0,l.mdx)("hr",null),(0,l.mdx)("h2",{id:"target_labelname"},"target","_","label.name"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},"target_label.name: str\n")),(0,l.mdx)("hr",null),(0,l.mdx)("h2",{id:"target_labelpackage"},"target","_","label.package"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},"target_label.package: str\n")),(0,l.mdx)("hr",null),(0,l.mdx)("h2",{id:"target_labelpath"},"target","_","label.path"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},"target_label.path: CellPath\n")),(0,l.mdx)("hr",null),(0,l.mdx)("h2",{id:"target_labelwith_sub_target"},"target","_","label.with","_","sub","_","target"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},"def target_label.with_sub_target(\n    subtarget_name: str | list[str] = ...,\n) -> providers_label\n")),(0,l.mdx)("p",null,"Converts a ",(0,l.mdx)("inlineCode",{parentName:"p"},"TargetLabel")," into its corresponding ",(0,l.mdx)("inlineCode",{parentName:"p"},"ProvidersLabel")," given the subtarget names, which is a list for each layer of subtarget"),(0,l.mdx)("p",null,"Sample usage:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-text"},'def _impl_sub_target(ctx):\n    owners = ctx.uquery().owner("bin/TARGETS.fixture")\n    for owner in owners:\n        unconfigured_label = owner.label\n        ctx.output.print(unconfigured_label.with_sub_target())\n        ctx.output.print(unconfigured_label.with_sub_target("subtarget1"))\n        ctx.output.print(unconfigured_label.with_sub_target(["subtarget1", "subtarget2"]))\n')))}b.isMDXComponent=!0}}]);